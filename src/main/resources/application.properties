server.port.regexp=${8080}

spring.main.allow-bean-definition-overriding=true

spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/school
spring.datasource.username=postgres
spring.datasource.password=30061998sao

spring.jooq.sql-dialect=org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=validate

#Mail Sender
spring.mail.host=smtp.gmail.com
spring.mail.username=ashapravsky@gmail.com
spring.mail.password=yfde[jljyjcjh
spring.mail.port=465
spring.mail.protocol=smtps
mail.debug=true

#Flyway migration config
spring.flyway.locations=classpath:\\db\\migration
spring.flyway.baselineOnMigrate = true

logging.level.root = INFO

#reCaptcha
recaptcha.secret=6LcurqMUAAAAANsmOl7WZ7p06VPJUXq-OpqEKgbO

spring.session.jdbc.initialize-schema=always
spring.session.jdbc.table-name=SPRING_SESSION

activation.domain=http://localhost:8080/activate/

## Map path to auth service
#zuul.routes.auth-service.path=/auth/**
#zuul.routes.auth-service.service-id=AUTH-SERVICE
#
## By default, all requests to gallery service for example will start with: "/gallery/"
## What will be sent to the gallery service is what comes after the path defined,
## So, if request is "/gallery/view/1", gallery service will get "/view/1".
## In case of auth, we need to pass the "/auth/" in the path to auth service. So, set strip-prefix to false
#zuul.routes.auth-service.strip-prefix=false
#
## Exclude authorization from sensitive headers
#zuul.routes.auth-service.sensitive-headers=Cookie,Set-Cookie